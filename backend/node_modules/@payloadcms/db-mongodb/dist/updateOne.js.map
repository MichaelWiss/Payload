{"version":3,"sources":["../src/updateOne.ts"],"sourcesContent":["import type { MongooseUpdateQueryOptions, UpdateQuery } from 'mongoose'\nimport type { UpdateOne } from 'payload'\n\nimport type { MongooseAdapter } from './index.js'\n\nimport { buildQuery } from './queries/buildQuery.js'\nimport { buildProjectionFromSelect } from './utilities/buildProjectionFromSelect.js'\nimport { getCollection } from './utilities/getEntity.js'\nimport { getSession } from './utilities/getSession.js'\nimport { handleError } from './utilities/handleError.js'\nimport { transform } from './utilities/transform.js'\n\nexport const updateOne: UpdateOne = async function updateOne(\n  this: MongooseAdapter,\n  {\n    id,\n    collection: collectionSlug,\n    data,\n    locale,\n    options: optionsArgs = {},\n    req,\n    returning,\n    select,\n    where: whereArg = {},\n  },\n) {\n  const { collectionConfig, Model } = getCollection({ adapter: this, collectionSlug })\n  const where = id ? { id: { equals: id } } : whereArg\n  const fields = collectionConfig.fields\n\n  const options: MongooseUpdateQueryOptions = {\n    ...optionsArgs,\n    lean: true,\n    new: true,\n    projection: buildProjectionFromSelect({\n      adapter: this,\n      fields: collectionConfig.flattenedFields,\n      select,\n    }),\n    session: await getSession(this, req),\n    // Timestamps are manually added by the write transform\n    timestamps: false,\n  }\n\n  const query = await buildQuery({\n    adapter: this,\n    collectionSlug,\n    fields: collectionConfig.flattenedFields,\n    locale,\n    where,\n  })\n\n  let result\n\n  let updateData: UpdateQuery<any> = data\n\n  const $inc: Record<string, number> = {}\n  const $push: Record<string, { $each: any[] } | any> = {}\n  const $addToSet: Record<string, { $each: any[] } | any> = {}\n  const $pull: Record<string, { $in: any[] } | any> = {}\n\n  transform({\n    $addToSet,\n    $inc,\n    $pull,\n    $push,\n    adapter: this,\n    data,\n    fields,\n    operation: 'write',\n  })\n\n  const updateOps: UpdateQuery<any> = {}\n\n  if (Object.keys($inc).length) {\n    updateOps.$inc = $inc\n  }\n  if (Object.keys($push).length) {\n    updateOps.$push = $push\n  }\n  if (Object.keys($addToSet).length) {\n    updateOps.$addToSet = $addToSet\n  }\n  if (Object.keys($pull).length) {\n    updateOps.$pull = $pull\n  }\n  if (Object.keys(updateOps).length) {\n    updateOps.$set = updateData\n    updateData = updateOps\n  }\n\n  try {\n    if (returning === false) {\n      await Model.updateOne(query, updateData, options)\n      transform({ adapter: this, data, fields, operation: 'read' })\n      return null\n    } else {\n      result = await Model.findOneAndUpdate(query, updateData, options)\n    }\n  } catch (error) {\n    handleError({ collection: collectionSlug, error, req })\n  }\n\n  if (!result) {\n    return null\n  }\n\n  transform({ adapter: this, data: result, fields, operation: 'read' })\n\n  return result\n}\n"],"names":["buildQuery","buildProjectionFromSelect","getCollection","getSession","handleError","transform","updateOne","id","collection","collectionSlug","data","locale","options","optionsArgs","req","returning","select","where","whereArg","collectionConfig","Model","adapter","equals","fields","lean","new","projection","flattenedFields","session","timestamps","query","result","updateData","$inc","$push","$addToSet","$pull","operation","updateOps","Object","keys","length","$set","findOneAndUpdate","error"],"mappings":"AAKA,SAASA,UAAU,QAAQ,0BAAyB;AACpD,SAASC,yBAAyB,QAAQ,2CAA0C;AACpF,SAASC,aAAa,QAAQ,2BAA0B;AACxD,SAASC,UAAU,QAAQ,4BAA2B;AACtD,SAASC,WAAW,QAAQ,6BAA4B;AACxD,SAASC,SAAS,QAAQ,2BAA0B;AAEpD,OAAO,MAAMC,YAAuB,eAAeA,UAEjD,EACEC,EAAE,EACFC,YAAYC,cAAc,EAC1BC,IAAI,EACJC,MAAM,EACNC,SAASC,cAAc,CAAC,CAAC,EACzBC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,OAAOC,WAAW,CAAC,CAAC,EACrB;IAED,MAAM,EAAEC,gBAAgB,EAAEC,KAAK,EAAE,GAAGlB,cAAc;QAAEmB,SAAS,IAAI;QAAEZ;IAAe;IAClF,MAAMQ,QAAQV,KAAK;QAAEA,IAAI;YAAEe,QAAQf;QAAG;IAAE,IAAIW;IAC5C,MAAMK,SAASJ,iBAAiBI,MAAM;IAEtC,MAAMX,UAAsC;QAC1C,GAAGC,WAAW;QACdW,MAAM;QACNC,KAAK;QACLC,YAAYzB,0BAA0B;YACpCoB,SAAS,IAAI;YACbE,QAAQJ,iBAAiBQ,eAAe;YACxCX;QACF;QACAY,SAAS,MAAMzB,WAAW,IAAI,EAAEW;QAChC,uDAAuD;QACvDe,YAAY;IACd;IAEA,MAAMC,QAAQ,MAAM9B,WAAW;QAC7BqB,SAAS,IAAI;QACbZ;QACAc,QAAQJ,iBAAiBQ,eAAe;QACxChB;QACAM;IACF;IAEA,IAAIc;IAEJ,IAAIC,aAA+BtB;IAEnC,MAAMuB,OAA+B,CAAC;IACtC,MAAMC,QAAgD,CAAC;IACvD,MAAMC,YAAoD,CAAC;IAC3D,MAAMC,QAA8C,CAAC;IAErD/B,UAAU;QACR8B;QACAF;QACAG;QACAF;QACAb,SAAS,IAAI;QACbX;QACAa;QACAc,WAAW;IACb;IAEA,MAAMC,YAA8B,CAAC;IAErC,IAAIC,OAAOC,IAAI,CAACP,MAAMQ,MAAM,EAAE;QAC5BH,UAAUL,IAAI,GAAGA;IACnB;IACA,IAAIM,OAAOC,IAAI,CAACN,OAAOO,MAAM,EAAE;QAC7BH,UAAUJ,KAAK,GAAGA;IACpB;IACA,IAAIK,OAAOC,IAAI,CAACL,WAAWM,MAAM,EAAE;QACjCH,UAAUH,SAAS,GAAGA;IACxB;IACA,IAAII,OAAOC,IAAI,CAACJ,OAAOK,MAAM,EAAE;QAC7BH,UAAUF,KAAK,GAAGA;IACpB;IACA,IAAIG,OAAOC,IAAI,CAACF,WAAWG,MAAM,EAAE;QACjCH,UAAUI,IAAI,GAAGV;QACjBA,aAAaM;IACf;IAEA,IAAI;QACF,IAAIvB,cAAc,OAAO;YACvB,MAAMK,MAAMd,SAAS,CAACwB,OAAOE,YAAYpB;YACzCP,UAAU;gBAAEgB,SAAS,IAAI;gBAAEX;gBAAMa;gBAAQc,WAAW;YAAO;YAC3D,OAAO;QACT,OAAO;YACLN,SAAS,MAAMX,MAAMuB,gBAAgB,CAACb,OAAOE,YAAYpB;QAC3D;IACF,EAAE,OAAOgC,OAAO;QACdxC,YAAY;YAAEI,YAAYC;YAAgBmC;YAAO9B;QAAI;IACvD;IAEA,IAAI,CAACiB,QAAQ;QACX,OAAO;IACT;IAEA1B,UAAU;QAAEgB,SAAS,IAAI;QAAEX,MAAMqB;QAAQR;QAAQc,WAAW;IAAO;IAEnE,OAAON;AACT,EAAC"}